//FONT-SIZES
//users can scale-up font-size but cannot scale-down font-size. From t-3-2 onwards, users given some margin to scale-down font-size
//clamp used instead of max because sass compiler giving error with max. Clamp achieves the same.

@mixin t-0-8 {
  font-size: 0.8rem;
  font-size: clamp(8px, 0.8rem, 0.8rem);
}
@mixin t-1-0 {
  font-size: 1rem;
  font-size: clamp(10px, 1rem, 1rem);
}
@mixin t-1-2 {
  font-size: 1.2rem;
  font-size: clamp(12px, 1.2rem, 1.2rem);
}
@mixin t-1-4 {
  font-size: 1.4rem;
  font-size: clamp(14px, 1.4rem, 1.4rem);
}
@mixin t-1-6 {
  font-size: 1.6rem;
  font-size: clamp(16px, 1.6rem, 1.6rem);
}
@mixin t-1-8 {
  font-size: 1.8rem;
  font-size: clamp(18px, 1.8rem, 1.8rem);
}
@mixin t-2-0 {
  font-size: 2rem;
  font-size: clamp(20px, 2rem, 2rem);
  line-height: 1.4;
}
@mixin t-2-4 {
  font-size: 2.4rem;
  line-height: 1.3;
  font-size: clamp(24px, 2.4rem, 2.4rem);
}
@mixin t-3-2 {
  //users given more flexibility to scale-down font-size from this point onwards
  font-size: 3.2rem;
  font-size: clamp(28px, 3.2rem, 2.2rem);
}

@mixin t-4-0 {
  font-size: 4rem;
  font-size: clamp(32px, 4rem, 4rem);
  line-height: 1.2;
}
@mixin t-4-8 {
  font-size: 4.8rem;
  font-size: clamp(40px, 4.8rem, 4.8rem);
}
@mixin t-6-4 {
  font-size: 6.4rem;
  font-size: clamp(48px, 6.4rem, 6.4rem);
}
@mixin t-9-6 {
  font-size: 9.6rem;
  font-size: clamp(64px, 9.6rem, 9.6rem);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone-xs {
    @media only screen and (max-width: 22.8em) {
      @content;
    } //365px
  }

  @if $breakpoint == phone-s {
    @media only screen and (max-width: 31.25em) {
      @content;
    } //500px (500/16 = 31.25)
  }
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port-s {
    @media only screen and (max-width: 47.5em) {
      @content;
      //760
    }
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land-s {
    @media only screen and (max-width: 62.5em) {
      @content;
    } //1000px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  // @if $breakpoint == big-desktop {
  //   @media only screen and (min-width: 112.5em) {
  //     @content;
  //   } //1800
  // }
}

@mixin hide-from-and-below($breakpoint) {
  @include respond($breakpoint) {
    display: none;
  }
}

@mixin show-from-and-below($breakpoint, $displayProperty) {
  display: none !important;
  @include respond($breakpoint) {
    display: $displayProperty !important;
  }
}

@mixin show-only-for($breakpoint, $displayProperty) {
  display: none !important;
  @include respond($breakpoint) {
    display: $displayProperty !important;
  }

  $hideFrom: null;
  @if $breakpoint == tab-land {
    $hideFrom: tab-land-s;
  }
  @if $breakpoint == tab-land-s {
    $hideFrom: tab-port;
  }
  @if $breakpoint == tab-port {
    $hideFrom: tab-port-s;
  }
  @if $breakpoint == tab-port-s {
    $hideFrom: phone;
  }
  @if $breakpoint == phone {
    $hideFrom: phone-s;
  }
  @if $breakpoint == phone-s {
    $hideFrom: phone-xs;
  }

  @if $hideFrom {
    @include respond($hideFrom) {
      display: none !important;
    }
  }
}

.testMedia {
  // @include show-tab-land-test(tab-land, block);
  @include show-from-and-below(tab-land, block);

  background-color: rgb(209, 23, 69);
  height: 500px;
}
